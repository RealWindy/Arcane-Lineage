-- Windy hub beta
local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()script.Parent = game.ReplicatedStorage
-- Window	
local Window = Rayfield:CreateWindow({
    Name = "Windy Hub",
    LoadingTitle = "Windy Hub",
    LoadingSubtitle = "by realwindy",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "Windy Hub", -- Create a custom folder for your hub/game
        FileName = "Windy Hub config"
    },
    Discord = {
        Enabled = "true",
        Invite = "r9KSZjWaJG", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
        RememberJoins = true -- Set this to false to make them join the discord every time they load it up
    },
    KeySystem = false, -- Set this to true to use our key system
    KeySettings = {
        Title = "Untitled",
        Subtitle = "Key System",
        Note = "No method of obtaining the key is provided",
        FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
        SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
        GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
        Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
    }
})

local Teleports = Window:CreateTab("Teleports", 4483362458) -- Title, Image

local TpSection = Teleports:CreateSection("Select TP")

local Toggle = Teleports:CreateToggle({
    Name = "Data Rollback",
    CurrentValue = false,
    Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
        while task.wait() do
            local ohTable1 = {
                ["1"] = "\255"
        }
        game:GetService("ReplicatedStorage").Remotes.Data.UpdateHotbar:FireServer(ohTable1)
    end,
 })


Rayfield:LoadConfiguration()
